---
import { getCollection, getEntry } from "astro:content";

import Base from "../../layouts/Base.astro";
import PrevNext from "../../components/posts/PrevNext.astro";

import { type RawPost } from "../../types/types";

import "../../styles/single-post.css";

const { post: postSlug } = Astro.params;
if (!postSlug) throw new Error("Slug not found");
const post = await getEntry("posts", postSlug);

if (!post) throw new Error("No post found for this slug");
const { Content } = await post.render();

export async function getStaticPaths() {
  const publishedPosts: RawPost[] = await getCollection(
    "posts",
    ({ data }: RawPost) => {
      return data.isPublished === true;
    }
  );
  const PostsLength = publishedPosts.length;

  return publishedPosts
    .sort(
      (a, b) =>
        new Date(b.data.date).getTime() - new Date(a.data.date).getTime()
    )
    .map((post, i) => {
      return {
        params: {
          post: post.slug,
        },
        props: {
          prevPost: i + 1 === PostsLength ? null : publishedPosts[i + 1],
          nextPost: i === 0 ? null : publishedPosts[i - 1],
        },
      };
    });
}

const { prevPost, nextPost } = Astro.props;
---

<Base title={post.data.title}>
  <div class="single-post">
    <header>
      <p>Post</p>
      <h1>{post.data.title}</h1>
    </header>
    <div class="mt-12">
      <Content />
    </div>
    <PrevNext {prevPost} {nextPost} />
  </div>
</Base>
