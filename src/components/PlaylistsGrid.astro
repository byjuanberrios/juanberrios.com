---
import { getCollection, type CollectionEntry } from "astro:content";
import { Image } from "astro:assets";

import { Icon } from "astro-icon/components";

import { type Playlist } from "../types/types";

import "../styles/playlists.css";

const sortByDate = (
  a: CollectionEntry<"playlists">,
  b: CollectionEntry<"playlists">
) => {
  const dateB = new Date(b.data.date);
  const dateA = new Date(a.data.date);
  return dateB.getTime() - dateA.getTime();
};

const playlists = await getCollection("playlists");
playlists.sort(sortByDate);
---

<div>
  <h1 class="inPage">Playlists</h1>

  <div class="playlists-grid">
    {
      playlists.map((playlist: Playlist) => (
        <div class="item">
          <Image
            src={playlist.data.imageUrl}
            alt={playlist.data.name}
            inferSize={true}
            loading="eager"
          />
          <div class="content">
            <div class="data">
              <p class="title">{playlist.data.name}</p>
              <p class="desc">
                {playlist.data.songs
                  ? `${playlist.data.songs} canciones`
                  : "Se actualiza continuamente"}
              </p>
            </div>
            <div class="platforms">
              {playlist.data.platforms.appleMusicLink && (
                <a
                  href={playlist.data.platforms.appleMusicLink}
                  target="_blank"
                  rel="noopener"
                  aria-label="platform"
                >
                  <Icon name="tabler:brand-apple-filled" />
                </a>
              )}
              {playlist.data.platforms.spotifyLink && (
                <a
                  href={playlist.data.platforms.spotifyLink}
                  target="_blank"
                  rel="noopener"
                  aria-label="platform"
                >
                  <Icon name="tabler:brand-spotify-filled" />
                </a>
              )}
            </div>
          </div>
        </div>
      ))
    }
  </div>
</div>
