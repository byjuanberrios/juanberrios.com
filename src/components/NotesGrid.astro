---
import { getCollection } from "astro:content";
import { orderNotesByYear } from "../utils/orderNotesByYear.astro";

import "../styles/notes.css";

interface Note {
  title: string;
  date: string;
  slug: string;
  summary?: string;
  image?: string;
}

interface OrderedNotes {
  [year: string]: Note[];
}

const { inPage } = Astro.props;

const allNotes = await getCollection("notes");
const orderedNotes: OrderedNotes = orderNotesByYear(
  allNotes,
  inPage ? false : true
);
---

<div class="notes-grid">
  {
    inPage ? (
      <h1 class="inPage">
        Todas las <span style="opacity: 0.5">notas</span>
      </h1>
    ) : (
      <h2>Notas</h2>
    )
  }
  {
    Object.entries(orderedNotes)
      .sort((yearA, yearB) => (yearA < yearB ? 1 : -1))
      .map(([year, notes]) => (
        <>
          <p class="title">{year}</p>
          <div class="grid">
            {notes
              .sort((noteA: Note, noteB: Note) => (noteA < noteB ? 1 : -1))
              .map((note: Note) => {
                const date = `${note.date.substring(8, 10)}/${note.date.substring(5, 7)}`;
                return (
                  <a class="item" href={`/notes/${note.slug}`}>
                    <p>{note.title}</p>
                    <hr />
                    <span>{date}</span>
                  </a>
                );
              })}
          </div>
        </>
      ))
  }
  {
    !inPage && (
      <a href="/notes" class="more">
        Ver notas antiguas
      </a>
    )
  }
</div>
