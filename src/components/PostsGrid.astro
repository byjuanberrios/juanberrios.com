---
import { getCollection } from "astro:content";
import { orderPostsByYear } from "../utils/orderPostsByYear.astro";
import type { Post, OrderedPosts } from "../types/types";

import "../styles/posts.css";

const { inPage } = Astro.props;

const allPosts = await getCollection("posts", ({ data }: { data: Post }) => {
  return data.isPublished === true;
});

const orderedPosts: OrderedPosts = orderPostsByYear(
  allPosts,
  inPage ? false : true
);
---

{
  // Page grid
  inPage ? (
    <div class="posts-grid">
      <h1 class="inPage regular">
        Todos los <span class="bold">posts</span>
      </h1>
      {Object.keys(orderedPosts)
        .sort((yearA, yearB) => (yearA < yearB ? 1 : -1))
        .map((year) => (
          <>
            <p class="title year">{year}</p>
            {Object.keys(orderedPosts[year])
              .sort((monthA, monthB) => (monthA < monthB ? 1 : -1))
              .map((month) => {
                const month_name = new Date(`1999/${month}/01`).toLocaleString(
                  "es-ES",
                  { month: "long" }
                );
                return (
                  <>
                    <p class="title month">{month_name}</p>
                    <div class="grid">
                      {orderedPosts[year][month]
                        .sort((postA, postB) => (postA < postB ? 1 : -1))
                        .map((post: Post) => {
                          const day = `${post.date.substring(8, 10)}`;
                          return (
                            <a class="item" href={`/posts/${post.slug}`}>
                              <p>{post.title}</p>
                              <hr />
                              <span>{day}</span>
                            </a>
                          );
                        })}
                    </div>
                  </>
                );
              })}
          </>
        ))}
    </div>
  ) : (
    // Index grid
    <div class="posts-grid">
      <h2 style="margin-bottom: var(--space-s)">Ãšltimos posts</h2>
      {Object.keys(orderedPosts)
        .sort((yearA, yearB) => (yearA < yearB ? 1 : -1))
        .map((year) => (
          <>
            {Object.keys(orderedPosts[year])
              .sort((monthA, monthB) => (monthA < monthB ? 1 : -1))
              .map((month) => (
                <div class="grid">
                  {orderedPosts[year][month]
                    .sort((postA, postB) => (postA < postB ? 1 : -1))
                    .map((post: Post) => {
                      const date = `${post.date.substring(8, 10)}/${post.date.substring(5, 7)}/${post.date.substring(2, 4)}`;
                      return (
                        <a class="item" href={`/posts/${post.slug}`}>
                          <p>{post.title}</p>
                          <hr />
                          <span>{date}</span>
                        </a>
                      );
                    })}
                </div>
              ))}
          </>
        ))}
      <a href="/posts" class="more">
        Ver todos los posts
      </a>
    </div>
  )
}
